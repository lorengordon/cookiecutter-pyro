{%- set project_slug = cookiecutter.project_slug|lower|replace(' ','_')|replace('-','_') -%}
{%- if cookiecutter.test_matrix_configurator|lower == "yes" -%}
; this is just a bootstrap tox configuration, run tox or ./ci/bootstrap.py to have the full tox.ini

[tox]
envlist = bootstrap

[testenv:bootstrap]
basepython =
    python
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *
{%- else -%}
; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    {py26,py27,py33,py34,py35,pypy}{% if cookiecutter.test_matrix_separate_coverage == 'yes' %}-{cover,nocov}{% endif %},
    report,
    docs

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    py26: {env:TOXPYTHON:python2.6}
    {py27,docs}: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    {clean,check,report,{% if cookiecutter.c_extension_support|lower == "yes" %}extension-coveralls,{% endif %}coveralls,codecov}: python3.5
    bootstrap: python
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    pypandoc==1.1.3
{%- if cookiecutter.test_runner|lower == "pytest" %}
    pytest
    pytest-travis-fold
    {% if cookiecutter.test_matrix_separate_coverage|lower == 'yes' %}cover: {% endif %}pytest-cov
{%- else %}
    nose
    {% if cookiecutter.test_matrix_separate_coverage|lower == 'yes' %}cover: {% endif %}coverage
{%- endif %}
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    {%- if cookiecutter.test_matrix_separate_coverage|lower == 'yes' or cookiecutter.test_matrix_configurator|lower == 'yes' %}
    cover: python setup.py clean --all build_ext --force --inplace
    {%- endif %}
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {%- if cookiecutter.test_matrix_separate_coverage|lower == 'yes' %}
    nocov: {posargs:py.test -vv --ignore=src}
    cover: {posargs:py.test --cov --cov-report=term-missing -vv}
    {%- else %}
    {posargs:py.test --cov --cov-report=term-missing -vv tests}
    {%- endif %}
{%- else %}
    {%- if cookiecutter.test_matrix_separate_coverage|lower == 'yes' %}
    nocov: {posargs:nosetests -v tests}
    cover: {posargs:nosetests --with-coverage --cover-package={{ project_slug }}}
    {%- else %}
    {posargs:nosetests --with-coverage --cover-package={{ project_slug }} tests}
    {%- endif %}
{%- endif %}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    mkdocs build --clean

[testenv:check]
deps =
    pypandoc==1.1.3
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 --jobs=1 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coverage combine
    coverage report
    coveralls{%- if cookiecutter.c_extension_support|lower == "yes" %} --merge=extension-coveralls.json{% endif %} []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage combine
    coverage report
    coverage xml --ignore-errors
    codecov []

{%- if cookiecutter.c_extension_support|lower == "yes" %}
[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []
{%- endif %}

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

{%- if cookiecutter.test_matrix_separate_coverage|lower == 'yes' %}
[testenv:py26-cover]
usedevelop = true

[testenv:py27-cover]
usedevelop = true

[testenv:py33-cover]
usedevelop = true

[testenv:py34-cover]
usedevelop = true

[testenv:py35-cover]
usedevelop = true

[testenv:pypy-cover]
usedevelop = true
{%- endif %}
{%- endif %}
