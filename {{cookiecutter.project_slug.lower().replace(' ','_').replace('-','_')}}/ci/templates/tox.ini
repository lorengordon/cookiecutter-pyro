{%- set project_slug = cookiecutter.project_slug|lower|replace(' ','_')|replace('-','_') -%}
{% raw -%}
[tox]
envlist =
    clean,
    check,
{%- for env in tox_environments|sort %}
    {{ env }},
{%- endfor %}
    report,
    docs

[testenv]
basepython =
    {docs}: python2.7
    {clean,check,report,extension-coveralls,coveralls,codecov}: python3.5
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
{%- endraw -%}
    pypandoc
{%- if cookiecutter.test_runner|lower == "pytest" %}
    pytest
    pytest-travis-fold
{%- else %}
    nose
{%- endif %}
commands =
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force --inplace
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test -vv --ignore=src}
{%- else %}
    {posargs:nosetests -v tests}
{%- endif %}
{%- raw %}

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    mkdocs build

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:check]
deps =
    pypandoc
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py
{% endraw %}
[testenv:coveralls]
deps =
    coveralls
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coveralls{%- if cookiecutter.c_extension_support|lower == "yes" %} --merge=extension-coveralls.json{% endif %} []

[testenv:codecov]
deps =
    codecov
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coverage xml --ignore-errors
    codecov []

{% if cookiecutter.c_extension_support|lower == "yes" %}
[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
usedevelop = false
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []
{% endif -%}
{% raw %}
[testenv:report]
deps = coverage
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

{% for env, config in tox_environments|dictsort %}
[testenv:{{ env }}]
basepython = {env:TOXPYTHON:{{ config.python }}}
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
    WITH_COVERAGE=yes
{%- endraw -%}
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    SETUPPY_CFLAGS=-coverage
{%- endif %}
{%- raw %}
usedevelop = true
commands =
{%- endraw -%}
{%- if cookiecutter.c_extension_support|lower == "yes" %}
    python setup.py clean --all build_ext --force --inplace
{%- endif %}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    {posargs:py.test --cov --cov-report=term-missing -vv}
{%- else %}
    {posargs:nosetests --with-coverage --cover-package={{ project_slug }}}
{%- endif %}
{%- raw %}
{% endif %}
{% if config.cover or config.deps %}
deps =
    {[testenv]deps}
{% endif %}
{% if config.cover %}
{%- endraw -%}
{%- if cookiecutter.test_runner|lower == "pytest" %}
    pytest-cov
{%- else %}
    coverage
{%- endif %}
{%- raw %}
{% endif %}
{% for dep in config.deps %}
    {{ dep }}
{% endfor %}

{% endfor %}

{% endraw %}
